@model IEnumerable<BusinessObject.Models.Meal>

@{
    ViewData["Title"] = "Meal_Index";
    Layout = "~/Views/Shared/_StaffLayout.cshtml";
}

<div class="preloader">
    <div class="lds-ripple">
        <div class="lds-pos"></div>
        <div class="lds-pos"></div>
    </div>
</div>

<div id="main-wrapper" data-layout="vertical" data-navbarbg="skin5" data-sidebartype="full"
     data-sidebar-position="absolute" data-header-position="absolute" data-boxed-layout="full">
    <div class="page-wrapper">
        <div class="container-fluid">
            <div class="row">
                <div class="col-sm-12">
                    <div style="margin-bottom: 0px" class="white-box">
                        <div class="container">
                            <div style="display: flex; align-items: center" class="row">
                                <div class="col-md-6">
                                    <h3 style="font-size: 30px" class="box-title">Meal</h3>
                                </div>
                                <div class="col-md-6 text-right">
                                    <a asp-action="Create" asp-controller="Meal" style="margin-left: 318px; background-color: #538a50" class="btn text-white">
                                        Create new meal
                                    </a>
                                </div>
                            </div>
                        </div>

                        <p class="text-muted"></p>

                        <div class="table-responsive" style="height: 490px; overflow-y: scroll;">
                            <table class="table text-nowrap">
                                <thead>
                                    <tr>
                                        <th style="font-size: 17px; font-weight:bold">
                                            @Html.DisplayNameFor(model => model.MealCode)
                                        </th>
                                        <th style="font-size: 17px; font-weight:bold">
                                            @Html.DisplayNameFor(model => model.MealImage)
                                        </th>
                                        <th style="font-size: 17px; font-weight:bold">
                                            @Html.DisplayNameFor(model => model.MealName)
                                        </th>
                                        <th style="font-size: 17px; font-weight:bold">
                                            @Html.DisplayNameFor(model => model.Price)
                                        </th>
                                        <th style="font-size: 17px; font-weight:bold">
                                            @Html.DisplayNameFor(model => model.QuantityAvailable)
                                        </th>
                                        <th style="font-size: 17px; font-weight:bold">
                                            @Html.DisplayNameFor(model => model.MealStatus)
                                        </th>
                                        <th style="font-size: 17px; font-weight:bold; text-align: center">
                                            Action
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.MealCode)
                                            </td>
                                            <td>
                                                @if (string.IsNullOrEmpty(item.MealImage))
                                                {
                                                    <img class="product-img" src="~/Admin/plugins/images/no-image.png" width="100" height="100" />
                                                }
                                                else
                                                {
                                                    <img class="product-img" src="@item.MealImage" width="100" height="100" />
                                                }
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.MealName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Price)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.QuantityAvailable)
                                            </td>
                                            <td>
                                                <div class="checkbox-wrapper-5">
                                                    <div class="check">
                                                        <input id="check-@item.MealId" type="checkbox" @(item.MealStatus == 1 ? "checked" : "") onchange="toggleMealStatus(this, @item.MealId)">
                                                        <label class="labelCheck" for="check-@item.MealId"></label>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="option">
                                                <div class="dropdown">
                                                    <div onclick="toggleDropdown(this)">
                                                        <i class="fa-solid fa-ellipsis-vertical"></i>
                                                    </div>
                                                    <div class="dropdown-content">
                                                        <a asp-action="Edit" asp-route-id="@item.MealId">Edit</a>
                                                        <a asp-action="Details" asp-route-id="@item.MealId">Details</a>
                                                        <a asp-action="Delete" asp-route-id="@item.MealId">Delete</a>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .labelCheck{
        margin: 0;
    }
    .checkbox-wrapper-5 .check {
        --size: 40px;
        position: relative;
        background: linear-gradient(90deg, #a6d6a3, #538a50);
        line-height: 0;
        perspective: 400px;
        font-size: var(--size);
    }

        .checkbox-wrapper-5 .check input[type="checkbox"],
        .checkbox-wrapper-5 .check label,
        .checkbox-wrapper-5 .check label::before,
        .checkbox-wrapper-5 .check label::after,
        .checkbox-wrapper-5 .check {
            appearance: none;
            display: inline-block;
            border-radius: var(--size);
            border: 0;
            transition: .35s ease-in-out;
            box-sizing: border-box;
            cursor: pointer;
        }

            .checkbox-wrapper-5 .check label {
                width: calc(2.2 * var(--size));
                height: var(--size);
                background: #d7d7d7;
                overflow: hidden;
            }

            .checkbox-wrapper-5 .check input[type="checkbox"] {
                position: absolute;
                z-index: 1;
                width: calc(.8 * var(--size));
                height: calc(.8 * var(--size));
                top: calc(.1 * var(--size));
                left: calc(.1 * var(--size));
                background: linear-gradient(45deg, #dedede, #ffffff);
                box-shadow: 0 6px 7px rgba(0,0,0,0.3);
                outline: none;
                margin: 0;
            }

                .checkbox-wrapper-5 .check input[type="checkbox"]:checked {
                    left: calc(1.3 * var(--size));
                }

                    .checkbox-wrapper-5 .check input[type="checkbox"]:checked + label {
                        background: transparent;
                    }

            .checkbox-wrapper-5 .check label::before,
            .checkbox-wrapper-5 .check label::after {
                content: "· ·";
                position: absolute;
                overflow: hidden;
                left: calc(.15 * var(--size));
                top: calc(.5 * var(--size));
                height: var(--size);
                letter-spacing: calc(-0.04 * var(--size));
                color: #9b9b9b;
                font-family: "Times New Roman", serif;
                z-index: 2;
                font-size: calc(.6 * var(--size));
                border-radius: 0;
                transform-origin: 0 0 calc(-0.5 * var(--size));
                backface-visibility: hidden;
            }

            .checkbox-wrapper-5 .check label::after {
                content: "●";
                top: calc(.65 * var(--size));
                left: calc(.2 * var(--size));
                height: calc(.1 * var(--size));
                width: calc(.35 * var(--size));
                font-size: calc(.2 * var(--size));
                transform-origin: 0 0 calc(-0.4 * var(--size));
            }

            .checkbox-wrapper-5 .check input[type="checkbox"]:checked + label::before,
            .checkbox-wrapper-5 .check input[type="checkbox"]:checked + label::after {
                left: calc(1.55 * var(--size));
                top: calc(.4 * var(--size));
                line-height: calc(.1 * var(--size));
                transform: rotateY(360deg);
            }

            .checkbox-wrapper-5 .check input[type="checkbox"]:checked + label::after {
                height: calc(.16 * var(--size));
                top: calc(.55 * var(--size));
                left: calc(1.6 * var(--size));
                font-size: calc(.6 * var(--size));
                line-height: 0;
            }

    .option {
        text-align: center;
    }

    .dropdown-content {
        text-align: left
    }
    .dropdown {
        position: relative;
        display: inline-block;
    }

        .dropdown > div {
            cursor: pointer;
        }

    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
        padding: 12px 16px;
        z-index: 1;
        right: 0;
        left: auto;
    }

        .dropdown-content a {
            display: block;
            padding: 8px 0;
            color: black; /* Màu chữ mặc định */
            transition: color 0.3s;
        }

            .dropdown-content a:hover {
                color: #538a50; /* Màu chữ khi rê chuột vào */
            }
</style>


@section scripts {
    <script>
        var activeDropdown = null;

        function toggleDropdown(dots) {
            var dropdownContent = dots.nextElementSibling;
            if (activeDropdown !== dropdownContent) {
                closeActiveDropdown();
                dropdownContent.style.display = 'block';
                activeDropdown = dropdownContent;
            } else {
                closeActiveDropdown();
            }
        }

        function closeActiveDropdown() {
            if (activeDropdown) {
                activeDropdown.style.display = 'none';
                activeDropdown = null;
            }
        }

        document.addEventListener('click', function (event) {
            var targetElement = event.target;
            if (!targetElement.closest('.dropdown')) {
                closeActiveDropdown();
            }
        });

        function toggleMealStatus(checkbox, mealId) {
            $.ajax({
                url: "https://localhost:7022/api/Meal/ChangeStatus/" + mealId,
                type: "put",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function(result){

                },
                error: function(xhr) {
                    console.log(xhr)
                }
            });
        }

    </script>
}
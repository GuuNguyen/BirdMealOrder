@model IEnumerable<BusinessObject.Models.Order>

@{
    ViewData["Title"] = "Order_Index";
    Layout = "~/Views/Shared/_StaffLayout.cshtml";
}

<div class="preloader">
    <div class="lds-ripple">
        <div class="lds-pos"></div>
        <div class="lds-pos"></div>
    </div>
</div>
<div id="main-wrapper" data-layout="vertical" data-navbarbg="skin5" data-sidebartype="full"
     data-sidebar-position="absolute" data-header-position="absolute" data-boxed-layout="full">
    <div class="page-wrapper">
        <div class="container-fluid">
            <div class="row">
                <div class="col-sm-12">
                    <div style="margin-bottom: 0px" class="white-box">
                        <div class="container">
                            <div style="display: flex; align-items: center" class="row">
                                <div class="col-md-6">
                                    <h3 style="font-size: 30px" class="box-title">Order</h3>
                                </div>
                            </div>
                        </div>

                        <div id="notification" class="alert" style="display: none;"></div>

                        <p class="text-muted"></p>

                        <div class="table-responsive" style="height: 490px; overflow-y: scroll;">
                            <table class="table text-nowrap">
                                <thead>
                                    <tr>
                                        <th style="font-size: 17px; font-weight:bold;">
                                            @Html.DisplayNameFor(model => model.User)
                                        </th>
                                        <th style="font-size: 17px; font-weight:bold">
                                            @Html.DisplayNameFor(model => model.OrderDate)
                                        </th>
                                        <th style="font-size: 17px; font-weight:bold; text-align: center;">
                                            @Html.DisplayNameFor(model => model.ShipDate)
                                        </th>
                                        <th style="font-size: 17px; font-weight:bold">
                                            @Html.DisplayNameFor(model => model.TotalPrice)
                                        </th>
                                        <th style="font-size: 17px; font-weight:bold">
                                            @Html.DisplayNameFor(model => model.ShippingAddress)
                                        </th>
                                        <th style="font-size: 17px; font-weight:bold; text-align: center">
                                            @Html.DisplayNameFor(model => model.Status)
                                        </th>
                                        <th style="font-size: 17px; font-weight:bold; text-align: center">
                                            Save Status
                                        </th>
                                        <th style="font-size: 17px; font-weight:bold; text-align: center">
                                            Action
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var item in Model)
                                    {
                                        <form id="order-form-@item.OrderId" method="post" action="/Staff/ChangeOrderStatus">
                                        <tr data-id="@item.OrderId" class="product_list">
                                            <td>
                                                    @Html.DisplayFor(modelItem => item.User.FullName)
                                            </td>
                                            <td>
                                                    @item.OrderDate.ToString("dd/MM/yyyy")
                                            </td>
                                            <td style="text-align: center;">
                                                    @if (item.ShipDate != new DateTime(1753, 1, 1))
                                                    {
                                                        @Html.DisplayFor(modelItem => item.ShipDate)
                                                    }
                                            </td>
                                            <td>
                                                $@Html.DisplayFor(modelItem => item.TotalPrice)
                                            </td>
                                            <td>
                                                    @Html.DisplayFor(modelItem => item.ShippingAddress.City)
                                            </td>
                                            <td>
                                                    @if (item.Status == BusinessObject.Enums.OrderStatus.Canceled)
                                                    {
                                                    <select style="text-align: center; color: red; font-weight: bold" asp-for="@item.Status" class="form-control" asp-items="ViewBag.OrderStatus" onchange="updateStatusValue(this)" name="Status-@item.OrderId">
                                                    </select>
                                                    <input type="hidden" name="OrderId-@item.OrderId" value="@item.OrderId" />
                                                    }
                                                    @if (item.Status == BusinessObject.Enums.OrderStatus.Pending)
                                                    {
                                                    <select style="text-align: center; color: #5ecaf0; font-weight: bold" asp-for="@item.Status" class="form-control" asp-items="ViewBag.OrderStatus" onchange="updateStatusValue(this)" name="Status-@item.OrderId">
                                                    </select>
                                                    <input type="hidden" name="OrderId-@item.OrderId" value="@item.OrderId" />
                                                    }
                                                    @if (item.Status == BusinessObject.Enums.OrderStatus.Completed)
                                                    {
                                                    <select style="text-align: center; color: #558b51; font-weight: bold" asp-for="@item.Status" class="form-control" asp-items="ViewBag.OrderStatus" onchange="updateStatusValue(this)" name="Status-@item.OrderId">
                                                    </select>
                                                    <input type="hidden" name="OrderId-@item.OrderId" value="@item.OrderId" />
                                                    }
                                                    @if (item.Status == BusinessObject.Enums.OrderStatus.Processing)
                                                    {
                                                    <select style="text-align: center; color: orange; font-weight: bold" asp-for="@item.Status" class="form-control" asp-items="ViewBag.OrderStatus" onchange="updateStatusValue(this)" name="Status-@item.OrderId">
                                                    </select>
                                                    <input type="hidden" name="OrderId-@item.OrderId" value="@item.OrderId" />
                                                    }
                                            </td>
                                            <td>
                                                <input class="form-control" type="hidden" name="OrderId" value="@item.OrderId" />
                                                <input class="form-control" type="hidden" name="Status" id="status-input-@item.OrderId" value="@item.Status" />
                                                <button type="submit" id="save-button-@item.OrderId" style="display: none;" class="btn btn-primary save-button" data-orderid="@item.OrderId">Save</button>
                                            </td>
                                            <td class="option">
                                                <div class="dropdown">
                                                    <div onclick="toggleDropdown(this)">
                                                        <i class="fa-solid fa-ellipsis-vertical"></i>
                                                    </div>
                                                    <div class="dropdown-content">
                                                            @if (item.Status == BusinessObject.Enums.OrderStatus.Canceled)
                                                            {
                                                            <a asp-action="Edit" asp-controller="Order" asp-route-id="@item.OrderId">Edit</a>
                                                            <a asp-action="Details" asp-controller="Order" asp-route-id="@item.OrderId">Details</a>
                                                            }
                                                            else
                                                            {
                                                            <a asp-action="Edit" asp-controller="Order" asp-route-id="@item.OrderId">Edit</a>
                                                            <a asp-action="Details" asp-controller="Order" asp-route-id="@item.OrderId">Details</a>
                                                            <a data-product-id="@item.OrderId" onclick="showDeleteConfirmation(this)">Delete</a>
                                                            }
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                        </form>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal HTML -->
<div id="myModal" class="modal fade">
    <div class="modal-dialog modal-confirm">
        <div class="modal-content">
            <div class="modal-header flex-column">
                <div class="icon-box">
                    <i class="material-icons">&#xE5CD;</i>
                </div>
                <h4 class="modal-title w-100">Are you sure?</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <div class="modal-body">
                <p>Do you really want to delete this order? This process cannot be undone.</p>
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="cancelBtn">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
<script>
    var activeDropdown = null;

    function toggleDropdown(dots) {
        var dropdownContent = dots.nextElementSibling;
        if (activeDropdown !== dropdownContent) {
            closeActiveDropdown();
            dropdownContent.style.display = 'block';
            activeDropdown = dropdownContent;
        } else {
            closeActiveDropdown();
        }
    }

    function closeActiveDropdown() {
        if (activeDropdown) {
            activeDropdown.style.display = 'none';
            activeDropdown = null;
        }
    }

    document.addEventListener('click', function (event) {
        var targetElement = event.target;
        if (!targetElement.closest('.dropdown')) {
            closeActiveDropdown();
        }
    });

    var deleteProductId;
    function showDeleteConfirmation(element) {
        deleteProductId = element.dataset.productId;
        $('#myModal').modal('show');
    }

    $('#confirmDeleteBtn').click(function () {
        $('#myModal').modal('hide');
        $.ajax({
            url: 'https://localhost:7022/api/Order/DeleteChangeOrderStatus/' + deleteProductId,
            type: 'PUT',
            success: function () {
                // Xóa sản phẩm thành công, reload lại trang
                $("#notification").removeClass("alert-danger").addClass("alert-success");
                        $("#notification").text("Change status successfully.").show().delay(3000).fadeOut();
                        location.reload();
            },
            error: function (error) {
                // Xử lý lỗi nếu có
                console.log(error);
                $("#notification").removeClass("alert-success").addClass("alert-danger");
                        $("#notification").text("Error delete. Please try again.").show().delay(3000).fadeOut();
            }
        });
    });

    // Function to hide the modal
    function hideModal() {
        $('#myModal').modal('hide');
    }

    // Function to show the modal
    function showModal() {
        $('#myModal').modal('show');
    }
            function toggleSaveButton(element) {
            var orderId = element.parentNode.parentNode.getAttribute('data-id');
            var saveButton = document.getElementById('save-button-' + orderId);
            var previousValue = initialStatusValues[orderId];
            var currentValue = element.value;

            if (currentValue !== previousValue) {
                saveButton.style.display = 'block';
            } else {
                saveButton.style.display = 'none';
            }
        }
</script>
}

<style>
    /* CSS cho cửa sổ thông báo */
    #notification {
        display: none;
    }
</style>

<script>
    var initialStatusValues = {};

    function toggleSaveButton(element) {
        var orderId = element.parentNode.parentNode.getAttribute('data-id');
        var saveButton = document.getElementById('save-button-' + orderId);
        var previousValue = initialStatusValues[orderId];
        var currentValue = element.value;

        if (currentValue !== previousValue) {
            saveButton.style.display = 'block';
        } else {
            saveButton.style.display = 'none';
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        var selectElements = document.querySelectorAll('select.form-control');

        selectElements.forEach(function(selectElement) {
            var orderId = selectElement.parentNode.parentNode.getAttribute('data-id');
            initialStatusValues[orderId] = selectElement.value;

            selectElement.addEventListener('change', function() {
                toggleSaveButton(this);
            });
        });

        var saveButtons = document.querySelectorAll('.save-button');

        saveButtons.forEach(function(saveButton) {
            saveButton.addEventListener('click', function(event) {
                event.preventDefault();
                var orderId = this.getAttribute('data-orderid');
                var form = document.getElementById('order-form-' + orderId);
                var selectElement = document.querySelector('tr[data-id="' + orderId + '"] select.form-control');
                var statusInput = document.getElementById('status-input-' + orderId);
                statusInput.value = selectElement.value;
                form.submit();
            });
        });
    });

</script>

